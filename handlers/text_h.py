from aiogram import Router, Bot, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from keyboards.reply import main_kb, type_of_chat
from states.group import GroupState

router = Router()


@router.message(F.text == "‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def reply_kb(message: Message):
    await message.answer(f"–ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?\n\n"
                         f"<b>1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à–∏ —á–∞—Ç—ã.</b>\n"
                         f"<b>2. –í—ã–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞.</b>\n"
                         f"<b>3. –£–∫–∞–∂–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.</b>\n"
                         f"<b>4. –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.</b>\n"
                         f"<b>5. –î–æ–±–∞–≤—å—Ç–µ —Ñ—Ä–∞–∑—É –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏.</b>\n"
                         f"<b>6. –ù–∞—á–Ω–∏—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.</b>\n",
                         reply_markup=main_kb())


@router.message(F.text == "üîß –§—Ä–∞–∑–∞")
async def test(message: Message, bot: F.Bot):
    if message.chat.type == "private":
        await message.answer("Private chat")
    elif message.chat.type == "group" or message.chat.type == "supergroup":
        await message.answer("Group chat")
    else:
        await message.answer("Error")


@router.message(GroupState.check_admin_rights)
async def check_admin_rights(message: Message, bot: Bot, state: FSMContext):
    members = await bot.get_chat_member(chat_id=message.chat.id, user_id=7984318197)
    if members.status == "administrator":
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å —á–∞—Ç–∞:", reply_markup=type_of_chat())
        await state.set_state(GroupState.type_of_chat)
    else:
        await message.answer("–£ –±–æ—Ç–∞ –Ω–µ—Ç—É –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
        await state.set_state(GroupState.check_admin_rights)


@router.message(GroupState.type_of_chat)
async def save_type_of_chat(message: Message, state: FSMContext):
    if message.text == "üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å":
        await message.answer("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å")
        await state.set_state(GroupState.sender)
    elif message.text == "üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å":
        await message.answer("üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å")
        await state.set_state(GroupState.receiver)
